{"version":3,"sources":["actions/config.js","actions/index.js","App.js","reducers/index.js","index.js"],"names":["config","window","location","origin","actionId","loading","id","type","App","props","loadImages","state","pageNo","pageSize","imageLoaded","bind","updatePageNo","console","log","this","setState","Object","assign","stop","document","execCommand","index","urls","url","length","images","className","layout","currentPage","total","onCurrentChange","load","map","item","key","src","alt","React","Component","getImagesFromState","isLoading","connect","dispatch","a","axios","method","BASEURL","params","result","data","status","getImages","combineReducers","action","i18n","use","locale","logger","createLogger","store","createStore","reducer","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById"],"mappings":"8WAUeA,GATLC,OAAOC,SAASC,OACb,CAEX,QAAU,wBAEV,KANW,SCETC,EAAW,EAQR,SAASC,EAAQA,GACtB,MAAO,CACLC,GAAIF,IACJG,KAAM,UACNF,W,ICREG,E,kDACJ,WAAYC,GAAO,IAAD,6BAChB,cAAMA,IAGDA,MAAMC,WAFE,EACE,KAEf,EAAKC,MAAQ,CACXC,OAJW,EAKXC,SAJa,KAMf,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAVJ,E,yDAYLH,GAAQ,IAAD,OAClBK,QAAQC,IAAI,QACZC,KAAKC,UAAS,SAAAT,GACIU,OAAOC,OAAO,GAAGX,GACvBC,OAASA,KACnB,WACAX,OAAOsB,OACPC,SAASC,YAAY,QAAQ,GAC7B,EAAKhB,MAAMC,WAAW,EAAKC,MAAMC,OAAQ,EAAKD,MAAME,e,kCAuB5Ca,GACV,GAAIA,EAAM,EAAKP,KAAKR,MAAME,UAAYM,KAAKR,MAAMgB,KAAKD,GAAOE,IAAIC,OAAS,EAAE,CAC1E,IAAID,EAAMT,KAAKR,MAAMmB,OAAOJ,EAAM,GAAGE,IACjCD,EAAI,YAAOR,KAAKR,MAAMgB,MAC1BA,EAAKD,EAAM,GAAGE,IAAMA,EACpBT,KAAKC,SAAS,CACZO,Y,+BAIG,IAAD,OAEN,OACE,6BACE,kBAAC,aAAD,CAAYI,UAAU,aAAalB,SAAUM,KAAKR,MAAME,SAAUmB,OAAQ,4BACxEC,YAAad,KAAKR,MAAMC,OAAQsB,MAAO,KACvCC,gBAAiB,SAACvB,GAAD,OAAY,EAAKI,aAAaJ,MAEhD,yBAAKmB,UAAU,aACbZ,KAAKV,MAAM2B,KAAO,kBAAC,UAAD,MAAsBjB,KAAKV,MAAMqB,OAAOO,KAAI,SAACC,EAAKZ,GACnE,OACE,yBAAKK,UAAU,QAAQQ,IAAK,EAAK5B,MAAMC,OAAO,EAAKD,MAAME,SAAWa,GAClE,yBAAKc,IAAKF,EAAKV,IAAKa,IAAKf,c,GAlEvBgB,IAAMC,WA6ElBC,EAAqB,SAAAjC,GAAK,OAAIA,EAAMmB,QACpCe,EAAY,SAAAlC,GAAK,OAAIA,EAAMN,SAQlByC,eAPS,SAAAnC,GAAK,MAAK,CAChCmB,OAAQc,EAAmBjC,GAC3ByB,KAAMS,EAAUlC,OAES,SAAAoC,GAAQ,MAAK,CACtCrC,WAAY,SAACE,EAAOC,GAAR,OAAqBkC,EDzE5B,SAAmBnC,EAAQC,GAChC,8CAAO,WAAekC,GAAf,eAAAC,EAAA,6DACLD,EAAS1C,GAAQ,IADZ,SAEc4C,IAAM,CACvBC,OAAQ,MACRtB,IAAK5B,EAAOmD,QAAQ,aACpBC,OAAO,CACLxC,SACAC,cAPC,OAEDwC,EAFC,OAULpC,QAAQC,IAAImC,EAAOC,MACO,SAAvBD,EAAOC,KAAKC,QACbR,GA3BoBjB,EA2BDuB,EAAOC,KAAKA,KA1B5B,CACLhD,GAAIF,IACJG,KAAM,aACNuB,YAyBAiB,EAAS1C,GAAQ,IAdZ,iCAfF,IAAmByB,IAejB,OAAP,sDCwE0C0B,CAAU5C,EAAOC,QAE9CiC,CAA4CtC,G,QC5E5CiD,cAAgB,CAC7B3B,OAba,WAAyB,IAAxBnB,EAAuB,uDAAf,GAAI+C,EAAW,uCACrC,MAAmB,eAAhBA,EAAOnD,KACD,YAAImD,EAAO5B,QAEbnB,GAUPN,QARc,WAA4B,IAA3BM,EAA0B,wDAAX+C,EAAW,uCACzC,MAAkB,WAAfA,EAAOnD,KACDmD,EAAOrD,QAETM,K,2BCETgD,OAAKC,IAAIC,KAET,IAAMC,EAASC,yBAETC,EAAQC,YAAYC,EACxBC,YACEC,IACAN,IAEFO,IAASC,OACT,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFxC,SAAS+C,eAAe,W","file":"static/js/main.2582b2a9.chunk.js","sourcesContent":["const PORT = '9000';\nlet url = window.location.origin\nvar config = {\n    \n  \"BASEURL\":`http://localhost:3002`,\n  // \"BASEURL\": url,\n  \"PORT\": PORT\n  \n}\n\nexport default config;","import axios from 'axios';\nimport config from \"./config\";\nlet actionId = 1\nexport function setImages(images){\n  return {\n    id: actionId++,\n    type: 'set_images',\n    images\n  }\n}\nexport function loading(loading){\n  return {\n    id: actionId++,\n    type: 'loading',\n    loading\n  }\n}\nexport function getImages(pageNo, pageSize){\n  return async function(dispatch){\n    dispatch(loading(true))\n    let result = await axios({\n      method: \"get\",\n      url: config.BASEURL+\"/getImages\",\n      params:{\n        pageNo,\n        pageSize\n      }\n    })\n    console.log(result.data)\n    if(result.data.status === 'PASS')\n      dispatch(setImages(result.data.data))\n\n    dispatch(loading(false))\n  }\n}","import React from 'react';\nimport \"element-theme-default\"\nimport './App.css';\nimport {Pagination, Loading} from'element-react' \nimport {connect} from 'react-redux'\nimport {getImages} from \"./actions\";\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    let pageNo = 1;\n    let pageSize = 100;\n    this.props.loadImages(pageNo,pageSize);    \n    this.state = {\n      pageNo,\n      pageSize,\n    }\n    this.imageLoaded = this.imageLoaded.bind(this);\n    this.updatePageNo = this.updatePageNo.bind(this);\n  }\n  updatePageNo(pageNo){\n    console.log('here')\n    this.setState(state => {\n      let tempState = Object.assign({},state);\n      tempState.pageNo = pageNo;\n    },() => {\n      window.stop();\n      document.execCommand(\"Stop\", false);\n      this.props.loadImages(this.state.pageNo, this.state.pageSize)\n    })\n    // let urls = []\n    // for(let i=0;i<this.state.pageSize;i++){\n    //   urls.push({url: ''})\n    // }\n    // this.setState({\n    //   urls\n    // })\n    // setTimeout(() => {\n    //   let pageSize = this.state.pageSize;\n    //   let images = [...imagesJson.slice((pageNo-1)*pageSize,pageNo*pageSize)];\n    //   urls = [{url: images[0].url}];\n    //   for(let i=1;i<this.state.pageSize;i++){\n    //     urls.push({url: ''})\n    //   }\n    //   this.setState({\n    //     pageNo,\n    //     images,\n    //     urls\n    //   })\n    // },1000)\n  }\n  imageLoaded(index){\n    if((index+1) < this.state.pageSize && this.state.urls[index].url.length > 0){\n      let url = this.state.images[index+1].url;\n      let urls = [...this.state.urls]\n      urls[index+1].url = url;\n      this.setState({\n        urls\n      })\n    }\n  }\n  render(){\n    \n    return(\n      <div>\n        <Pagination className=\"pagination\" pageSize={this.state.pageSize} layout={\"prev, pager, next, jumper\"}\n          currentPage={this.state.pageNo} total={21000}\n          onCurrentChange={(pageNo) => this.updatePageNo(pageNo)}\n        />\n         <div className=\"container\">\n          {this.props.load ? <Loading></Loading> : this.props.images.map((item,index) => {\n            return (\n              <div className=\"Image\" key={this.state.pageNo*this.state.pageSize + index}>\n                <img src={item.url} alt={index} \n                // onLoad={() => this.imageLoaded(index)}\n                ></img>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n}\nconst getImagesFromState = state => state.images;\nconst isLoading = state => state.loading;\nconst mapStateToProps = state => ({\n  images: getImagesFromState(state),\n  load: isLoading(state)\n})\nconst mapDispatchToProps = dispatch => ({\n  loadImages: (pageNo,pageSize) => dispatch(getImages(pageNo,pageSize))\n})\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","import {\n  combineReducers\n} from \"redux\";\n\nconst images = (state = [], action) => {\n  if(action.type === 'set_images'){\n    return [...action.images];\n  }\n  return state;\n}\nconst loading = (state = false, action) => {\n  if(action.type == 'loading'){\n    return action.loading;\n  }\n  return state;\n}\nexport default combineReducers({\n  images,\n  loading\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reducer from \"./reducers\"\nimport { createStore, applyMiddleware } from \"redux\";\nimport locale from '../node_modules/element-react/src/locale/lang/en'\n\n//Wrap App in provider to provide store to all components\nimport {Provider} from 'react-redux'\n\n//add midleware to actions to dispatch async actions\nimport thunkMiddleware from 'redux-thunk';\nimport {createLogger} from 'redux-logger';\n\nimport { i18n } from 'element-react'\ni18n.use(locale);\n\nconst logger = createLogger();\n\nconst store = createStore(reducer,\n  applyMiddleware(\n    thunkMiddleware,\n    logger\n  ))\n  ReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}